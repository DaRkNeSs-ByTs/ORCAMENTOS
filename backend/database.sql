-- Criar a tabela de serviços
CREATE TABLE servicos (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    solicitante TEXT NOT NULL,
    loja TEXT NOT NULL,
    servico TEXT NOT NULL,
    orcamento DECIMAL(10,2) NOT NULL,
    infra_speak TEXT NOT NULL,
    mes_servico TEXT NOT NULL,
    ano_servico INTEGER NOT NULL,
    faturamento TEXT NOT NULL DEFAULT 'PENDENTE',
    situacao TEXT NOT NULL DEFAULT 'PENDENTE',
    projeto_manutencao TEXT NOT NULL DEFAULT 'MANUTENCAO',
    created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL
);

-- Criar a view de serviços
CREATE VIEW servicos_view AS
SELECT 
    id,
    solicitante,
    loja,
    servico,
    orcamento,
    infra_speak,
    mes_servico,
    ano_servico,
    faturamento,
    situacao,
    projeto_manutencao,
    created_at,
    updated_at
FROM servicos;

-- Habilitar Row Level Security (RLS)
ALTER TABLE servicos ENABLE ROW LEVEL SECURITY;

-- Criar política para permitir leitura pública
CREATE POLICY "Permitir leitura pública"
ON servicos FOR SELECT
USING (true);

-- Criar política para permitir inserção pública
CREATE POLICY "Permitir inserção pública"
ON servicos FOR INSERT
WITH CHECK (true);

-- Criar política para permitir atualização pública
CREATE POLICY "Permitir atualização pública"
ON servicos FOR UPDATE
USING (true)
WITH CHECK (true);

-- Criar política para permitir deleção pública
CREATE POLICY "Permitir deleção pública"
ON servicos FOR DELETE
USING (true);

-- Criar função para atualizar o updated_at
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = TIMEZONE('utc'::text, NOW());
    RETURN NEW;
END;
$$ language 'plpgsql';

-- Criar trigger para atualizar o updated_at
CREATE TRIGGER update_servicos_updated_at
    BEFORE UPDATE ON servicos
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- Criar índices para melhorar performance
CREATE INDEX idx_servicos_solicitante ON servicos(solicitante);
CREATE INDEX idx_servicos_mes_ano ON servicos(mes_servico, ano_servico);
CREATE INDEX idx_servicos_situacao ON servicos(situacao);
CREATE INDEX idx_servicos_faturamento ON servicos(faturamento); 